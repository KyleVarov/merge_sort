# -*- coding: utf-8 -*-
"""merge_sort.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LG-9Oh4Vo8z1d8GYg9NHzHuK4v-B4RAE
"""

import random
import time

n = 10000

unordered = []
for i in range(0,n):
  num = random.randint(1,n)
  unordered.append(num)

# array = [12, 15, 3, 65, 100, 54, 67, 32, 21, 2, 4, 76, 88]


def merge_sort(array):
  left = []
  right = []
  if len(array) <= 1:
    return array
  else:
    middle = int(len(array)/2)
    for i in range(0,middle):
      left.append(array[i])
    for i in range(middle,len(array)):
      right.append(array[i])
    left = merge_sort(left)
    right = merge_sort(right)
    return merge(left,right)

def merge(left,right):
  result = []
  while len(left) > 0 and len(right) > 0:
    if left[0] <= right[0]:
      result.append(left[0])
      left.pop(0)
    else:
      result.append(right[0])
      right.pop(0)
  if len(left) > 0:
    result.extend(left)
  if len(right) > 0:
    result.extend(right)

  return result

######################################################################################################################################

def insertion_sort(array):
  for i in range(1, len(array)):    # i is the border for dividing the sorted part with the unsorted part
      sorted_tail = i-1
      insert_element = i
      while array[sorted_tail] > array[insert_element] and sorted_tail >=0:
        temp = array[sorted_tail]
        array[sorted_tail] = array[insert_element]
        array[insert_element] = temp
        sorted_tail -= 1
        insert_element -= 1
        
  return array
start = time.time()
ordered_array_merge = mergeSort(unordered)
end = time.time()
result_merge = (end-start)
print(result_merge)

start = time.time()
ordered_array_insert = insertion_sort(unordered)
end = time.time()
result_insert = (end-start)
print(result_insert)

print(result_insert / result_merge)